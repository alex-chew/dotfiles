#!/usr/bin/env python3

import os
import shutil
import sys

import pystache
import yaml


TEMPLATE_DIR = 'templates'
OUT_DIR = 'out'


def get_theme(theme_path):
    '''
    Returns an object representation of the YAML file at theme_path, or None if
    the file cannot be parsed/read.
    '''
    try:
        with open(theme_path) as theme_file:
            return yaml.load(theme_file)
    except:
        return None


def render(template_path, theme, out_path):
    '''
    Renders template_path to out_path, using the theme configuration
    object, and creating directories as necessary.
    '''
    with open(template_path) as template_file:
        rendered = pystache.render(template_file.read(), theme)

    # Need to ensure base directories exist
    os.makedirs(os.path.dirname(out_path), exist_ok=True)
    with open(out_path, 'w') as out:
        out.write(rendered)


def main():
    if len(sys.argv) != 2:
        sys.exit('Usage: {} theme.yml'.format(sys.argv[0]))

    theme_file = sys.argv[1]
    theme = get_theme(theme_file)
    if theme is None:
        sys.exit('Could not read theme {}'.format(theme_file))

    # Gather all template files
    templates = set()
    for dirpath, dirs, files in os.walk(TEMPLATE_DIR):
        templates.update(map(lambda f: os.path.join(dirpath, f), files))

    for template_path in templates:
        out_path = template_path.replace(TEMPLATE_DIR, OUT_DIR, 1)
        render(template_path, theme, out_path)

        # Copy permissions to keep scripts executable
        shutil.copymode(template_path, out_path)


if __name__ == '__main__':
    main()
